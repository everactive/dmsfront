{"version":3,"sources":["components/Constants.js","components/Messages.js","models/constants.js","models/api.js","components/Utils.js","components/Navigation.js","components/NavigationUser.js","components/Header.js","components/Footer.js","components/AlertBox.js","components/Accounts.js","components/AccountEdit.js","components/DialogBox.js","components/Users.js","components/UserEdit.js","components/If.js","components/Device.js","components/Devices.js","components/Register.js","components/RegisterEdit.js","components/Pagination.js","components/SnapDialogBox.js","components/DeviceSnaps.js","components/Groups.js","components/Actions.js","components/GroupEdit.js","components/Index.js","App.js","index.js"],"names":["Role","Status","1","2","3","Constants","baseUrl","window","location","protocol","hostname","port","service","version","query","cancelCallback","axios","get","constants","getToken","getAuthToken","accountsList","accountsNew","post","accountsGet","id","accountsUpdate","put","accountsForUsers","username","accountsUpdateForUser","userId","accountId","groupsList","account","groupsGet","name","groupsGetDevices","groupsGetDevicesExcluded","groupsCreate","orgid","groupsUpdate","nameFrom","nameTo","groupsDeviceLink","deviceId","groupsDeviceUnlink","delete","snapsList","device","snapsInstallRefresh","snapsRemove","snap","snapsInstall","snapsUpdate","action","snapsSettings","snapsSettingsUpdate","settings","storeSearch","snapName","clientsList","clientsGet","clientsGetDownloadHREF","clientsNew","clientsDeviceObject","clientsUpdate","status","deviceData","devicesUpdate","accountCode","devicesList","devicesGet","actionsList","usersList","usersNew","usersGet","usersUpdate","usersDelete","subLinks","register","devices","groups","actions","T","message","Messages","parseRoute","parts","pathname","split","length","section","sectionId","subsection","isLoggedIn","token","isUser","isUserStandard","canUserAdministrate","isUserAdmin","isUserSuperuser","roleAsString","role","str","formatError","data","code","saveAccount","sessionStorage","setItem","getAccount","getItem","linksStandard","linksAdmin","linksSuperuser","Navigation","l","this","props","links","className","map","active","key","href","link","Component","NavigationUser","handleAccountChange","e","preventDefault","target","value","accounts","filter","a","onAccountChange","selectedAccount","onChange","selected","renderAccounts","renderUser","renderUserLogout","Header","src","alt","title","onClick","handleToggleMenu","width","Footer","state","getVersion","api","then","response","setState","AlertBox","c","type","Accounts","items","renderRows","isSuperuser","aria-hidden","renderTable","AccountEdit","handleChangeCode","handleChangeName","handleChangeCountry","country","handleSaveClick","catch","error","hideForm","setTitle","organization","htmlFor","disabled","placeholder","DialogBox","handleCancelClick","handleYesClick","Users","handleDelete","confirmDelete","getAttribute","handleDeleteUser","users","user","handleDeleteUserCancel","handleClickAccount","parseInt","getAccountsForUser","showAccounts","showAccountsId","getUsers","organizations","concat","data-key","renderActions","email","data-user","item","style","acc","data-account","data-username","colSpan","UserEdit","handleChangeUsername","handleChangeEmail","handleChangeRole","getUser","If","cond","children","Array","isArray","callback","Device","moment","created","format","modified","d","client","brand","model","serial","lastRefresh","osId","osVersionId","series","kernelVersion","onClassic","Devices","m","start","end","duration","diff","asMinutes","registrationId","getAge","Register","copyToClipboard","el","document","createElement","body","appendChild","select","execCommand","removeChild","s","deviceKey","substr","getStatus","statusOptions","RegisterEdit","handleChangeBrand","handleChangeModel","handleChangeSerial","handleChangeStatus","statusTo","handleFileUpload","reader","FileReader","file","files","onload","upload","result","readAsDataURL","getDevice","enrollment","Pagination","pageUp","pages","calculatePages","page","signalPageChange","pageDown","maxRecords","pageSize","startRow","pageChange","displayRows","renderPaging","SnapDialogBox","handleSearchChange","handleKeyPress","handleSearchStore","searchStore","handleInstall","handleInstallClick","handleRecordsForPage","endRow","snaps","loadingSearch","_embedded","messageType","slice","snap_id","description","package_name","developer_name","filesize","binary_filesize","onKeyPress","renderSnaps","DeviceSnaps","handleRefreshList","showInstall","handleSnapInstall","handleSnapOnChange","handleRefresh","handleToggle","findSnap","handleRemove","handleDialogCancel","handleShowSettings","snapSettings","config","JSON","stringify","parse","handleSettingsChange","handleSettingsUpdate","handleTextChange","rows","tableWidth","hide","channel","renderSettings","renderShowInstall","Groups","handleGroupClick","devicesExcluded","refresh","handleAddToGroup","handleRemoveFromGroup","getGroupDevices","getGroupExcludedDevices","excluded","renderRowsGroups","renderRowsDevices","renderTableGroups","renderTableDevices","renderTableDevicesExcluded","Actions","GroupEdit","getGroup","org_id","group","Index","handleLogin","renderError","history","createHistory","App","updateDataForRoute","reg_devices","clients","clientObject","listen","handleNavigation","bind","getAccounts","scrollTo","endpoint","console","log","accountChanged","r","getRegisteredDevices","getDevices","getClient","getActions","getSnaps","getGroups","currentSection","sectionNavLinks","renderSubnav","renderDevices","renderRegister","renderGroups","renderUsers","ReactDOM","render","getElementById","resp","jwt","headers","authorization","jwtDecode"],"mappings":"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","file":"static/js/main.8ca24fda.chunk.js","sourcesContent":["/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nexport const Role = {\n    Standard: 100,\n    Admin: 200,\n    Superuser: 300,\n}\n\nexport const LoadingImage = '/static/images/ajax-loader.gif'\n\nexport const Status = {\n    1: 'waiting',\n    2: 'enrolled',\n    3: 'disabled',\n}\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {    \n    'account-name-desc':        'Name of the company',\n    'account-code-desc':        'Account ID from the Ubuntu Store',\n    'accounts':                 'Accounts',\n    'action':                   'Action',\n    'actions':                  'Actions',\n    'active':                   'Active',\n    'address':                  'Address',\n    'brand':                    'Brand',\n    'brand-desc':               'Brand ID from the model assertion',\n    'cancel':                   'Cancel',\n    'close':                    'Close',\n    'code':                     'Code',\n    'confirm-snap-install':     'Enter the snap to install',\n    'confirm-user-delete':      'Confirm user deletion',\n    'copy-device-key':          'Copy device public key to clipboard',\n    'country':                  'Country code',\n    'country-desc':             'SSL certificate country code',\n    'created':                  'Created',\n    'current-time':             'Current Time',\n    'delete-user':              'Delete User',\n    'description':              'Description',\n    'device-data':              'Device-specific Data',\n    'device-detail':            'Device Details',\n    'device-name-desc':         'Unique name of the device',\n    'devices':                  'Devices',\n    'devices-connected':        'Connected Devices',\n    'devices-excluded':         'Not in Group',\n    'disabled':                 'Disabled',\n    'download-file':            'Download File',\n    'edit-account':             'Edit Account',\n    'edit-device':              'Edit Device Registration',\n    'edit-group':               'Edit Device Group',\n    'edit-user':                'Edit User',\n    'email':                    'Email',\n    'enrolled':                 'Enrolled',\n    'error-auth-device':        'Invalid device',\n    'error-no-auth':            'You do not have permissions to access this site. Please login.',\n    'error-no-permissions':     'You do not have permissions to access this page',\n    'error-account-invalid':    'Invalid Account',\n    'error-user-invalid':       'Invalid User',\n    'firmware-version':         'Firmware Version',\n    'group-desc':               'Name of a device group',\n    'groups':                   'Groups',\n    'hardware-version':         'Hardware Version',\n    'id':                       'ID',\n    'identity':                 'Identity',\n    'info':                     'Info',\n    'install-on-device':        'Install on device',\n    'install-snap':             'Install a snap',\n    'installed-snaps':          'Installed Snaps',\n    'kernel-version':           'Kernel Version',\n    'key':                      'Key',\n    'last-update':              'Last Update',\n    'loading':                  'Loading...',\n    'model':                    'Model',\n    'model-desc':               'Model name from the model assertion',\n    'modified':                 'Modified',\n    'name':                     'Name',\n    'new-account':              'Create New Account',\n    'new-device':               'New Device Registration',\n    'new-group':                'New Device Group',\n    'new-user':                 'Create New User',\n    'no-accounts':              'No accounts registered',\n    'no-actions':               'No actions found',\n    'no-devices':               'No devices registered',\n    'no-devices-connected':     'No devices connected',\n    'no-groups':                'No groups registered',\n    'no-users':                 'No users registered',\n    'ok':                       'OK',\n    'on-classic':               'On Classic',\n    'os-version':               'OS Version',\n    'refresh':                  'Refresh',\n    'refresh-snap-list':        'Update installed snaps',\n    'reg-date':                 'Registration Date',\n    'register':                 'Register',\n    'register-desc':            'Devices must be registered with the Identity Service to allow them to connect securely to the cloud services',\n    'register-devices':         'Registered Devices',\n    'registered':               'Registered',\n    'remove':                   'Remove',\n    'result':                   'Result',\n    'role':                     'Role',\n    'save':                     'Save',\n    'search-store':             'search store for snap',\n    'serial':                   'Serial Number',\n    'serial-desc':              'Serial Number from the serial assertion',\n    'series':                   'Series',\n    'settings':                 'Settings',\n    'serial-number':            'Serial Number',\n    'site-description':         'Manage Ubuntu devices connected via the MQTT protocol.',\n    'snap':                     'Snap',\n    'snap-store':               'Snap Store',\n    'snaps':                    'Snaps',\n    'software-version':         'Software Version',\n    'status':                   'Status',\n    'summary':                  'Summary',\n    'system-info':              'System Information',\n    'utc-offset':               'UTC Offset',\n    'timezone':                 'Timezone',\n    'title':                    'Device Management Service',\n    'toggle-status':            'Enable/Disable',\n    'update':                   'Update',\n    'uptime':                   'Uptime',\n    'user-email-desc':          'Email address of the user',\n    'user-not-found':           'You do not have permissions to access this site',\n    'user-name-desc':           'Full name of the user',\n    'user-username-desc':       'Ubuntu SSO name of the user',\n    'username':                 'Username',\n    'users':                    'Users',\n    'version':                  'Version',\n    'view-settings':            'View configuration',\n    'waiting':                  'Waiting',\n    'yes':                      'Yes',\n}\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nconst API_PREFIX = '/v1/'\n\nfunction getBaseURL() {\n    return window.location.protocol + '//' + window.location.hostname + ':' + window.location.port + API_PREFIX;\n}\n\nvar Constants = {\n    baseUrl: getBaseURL()\n}\n\nexport default Constants\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport axios from 'axios'\nimport constants from './constants'\n\nvar service = {\n\n    version: (query, cancelCallback) => {\n        return axios.get(constants.baseUrl + 'version');\n    },\n\n    getToken: () => {\n        return axios.get(constants.baseUrl + 'token')\n    },\n\n    getAuthToken: () => {\n        return axios.get(constants.baseUrl + 'authtoken')\n    },\n\n    accountsList: (query, cancelCallback) => {\n        return axios.get(constants.baseUrl + 'organizations');\n    },\n\n    accountsNew: (query, cancelCallback) => {\n        return axios.post(constants.baseUrl + 'organizations', query);\n    },\n\n    accountsGet: (id, cancelCallback) => {\n        return axios.get(constants.baseUrl + 'organizations/' + id);\n    },\n\n    accountsUpdate: (id, query, cancelCallback) => {\n        return axios.put(constants.baseUrl + 'organizations/' + id, query);\n    },\n\n    accountsForUsers: (username, cancelCallback) => {\n        return axios.get(constants.baseUrl + 'users/' + username + '/organizations');\n    },\n\n    accountsUpdateForUser: (userId, accountId, cancelCallback) => {\n        return axios.post(constants.baseUrl + 'users/' + userId + '/organizations/' + accountId);\n    },\n\n    groupsList: (account, cancelCallback) => {\n        return axios.get(constants.baseUrl + account + '/groups');\n    },\n\n    groupsGet: (account, name, cancelCallback) => {\n        return axios.get(constants.baseUrl + account + '/groups/' + name);\n    },\n\n    groupsGetDevices: (account, name, cancelCallback) => {\n        return axios.get(constants.baseUrl + account + '/groups/' + name + '/devices');\n    },\n\n    groupsGetDevicesExcluded: (account, name, cancelCallback) => {\n        return axios.get(constants.baseUrl + account + '/groups/' + name + '/devices/excluded');\n    },\n\n    groupsCreate: (account, name, cancelCallback) => {\n        return axios.post(constants.baseUrl + account + '/groups', {orgid: account, name: name});\n    },\n\n    groupsUpdate: (account, nameFrom, nameTo, cancelCallback) => {\n        return axios.put(constants.baseUrl + account + '/groups', {orgid: account, nameFrom: nameFrom, nameTo: nameTo});\n    },\n\n    groupsDeviceLink: (account, name, deviceId, cancelCallback) => {\n        return axios.post(constants.baseUrl + account + '/groups/' + name + '/' + deviceId);\n    },\n\n    groupsDeviceUnlink: (account, name, deviceId, cancelCallback) => {\n        return axios.delete(constants.baseUrl + account + '/groups/' + name + '/' + deviceId);\n    },\n\n    snapsList: (account, device, cancelCallback) => {\n        return axios.get(constants.baseUrl + 'device/' + account + '/' + device + '/snaps');\n    },\n    \n    snapsInstallRefresh: (account, device, cancelCallback) => {\n        return axios.post(constants.baseUrl + 'snaps/' + account + '/' + device.device.deviceId + '/list');\n    },\n\n    snapsRemove: (account,device, snap, cancelCallback) => {\n        return axios.delete(constants.baseUrl + 'snaps/' + account + '/' + device.device.deviceId + '/' + snap);\n    },\n\n    snapsInstall: (account, device, snap, cancelCallback) => {\n        return axios.post(constants.baseUrl + 'snaps/' + account + '/' + device.device.deviceId + '/' + snap);\n    },\n\n    snapsUpdate: (account, device, snap, action, cancelCallback) => {\n        return axios.put(constants.baseUrl + 'snaps/' + account + '/' + device.device.deviceId + '/' + snap + '/' + action);\n    },\n\n    snapsSettings: (account, device, snap, cancelCallback) => {\n        return axios.get(constants.baseUrl + 'snaps/' + account + '/' + device.device.deviceId + '/' + snap + '/settings');\n    },\n\n    snapsSettingsUpdate: (account, device, snap, settings, cancelCallback) => {\n        return axios.put(constants.baseUrl + 'snaps/' + account + '/' + device.device.deviceId + '/' + snap + '/settings', settings);\n    },\n\n    storeSearch: (snapName,cancelCallback) => {\n        return axios.get(constants.baseUrl + 'store/snaps/' + snapName);\n    },\n\n    clientsList: (account, query, cancelCallback) => {\n        return axios.get(constants.baseUrl + account + '/register/devices');\n    },\n\n    clientsGet: (account, device, cancelCallback) => {\n        return axios.get(constants.baseUrl + account + '/register/devices/' + device);\n    },\n\n    clientsGetDownloadHREF: (account, device) => {\n        return constants.baseUrl + account + '/register/devices/' + device + '/download';\n    },\n\n    clientsNew: (account, device, cancelCallback) => {\n        return axios.post(constants.baseUrl + account + '/register/devices', device);\n    },\n\n    clientsDeviceObject: (account, query, cancelCallback) => {\n        return axios.get(constants.baseUrl + account + '/clients/' + query + '/device');\n    },\n\n    clientsUpdate: (account, deviceId, status, deviceData, cancelCallback) => {\n        return axios.put(constants.baseUrl + account + '/register/devices/' + deviceId, {status: status, deviceData: deviceData});\n    },\n\n    devicesUpdate: (account, device, cancelCallback) => {\n        return axios.put(constants.baseUrl + device.accountCode + '/devices/' + device.id, device);\n    },\n\n    devicesList: (account, cancelCallback) => {\n        return axios.get(constants.baseUrl + account + '/devices');\n    },\n\n    devicesGet: (account, id, cancelCallback) => {\n        return axios.get(constants.baseUrl + account + '/devices/' + id);\n    },\n\n    actionsList: (account, id, cancelCallback) => {\n        return axios.get(constants.baseUrl + account + '/devices/' + id + '/actions');\n    },\n\n    usersList: (query, cancelCallback) => {\n        return axios.get(constants.baseUrl + 'users');\n    },\n\n    usersNew: (query, cancelCallback) => {\n        return axios.post(constants.baseUrl + 'users', query);\n    },\n\n    usersGet: (username, cancelCallback) => {\n        return axios.get(constants.baseUrl + 'users/' + username);\n    },\n\n    usersUpdate: (id, query, cancelCallback) => {\n        return axios.put(constants.baseUrl + 'users/' + id, query);\n    },\n\n    usersDelete: (username, cancelCallback) => {\n        return axios.delete(constants.baseUrl + 'users/' + username);\n    }\n}\n\nexport default service\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Messages from './Messages'\nimport {Role} from './Constants'\nimport jwtDecode from 'jwt-decode'\nimport api from '../models/api';\n\n\n\nconst subLinks = {\n    register: ['register', 'devices'],\n    devices: ['info', 'snaps'],\n    groups: ['groups', 'actions'],\n    actions: ['groups', 'actions'],\n}\n\nexport function T(message) {\n    const msg = Messages[message] || message;\n    return msg\n}\n\n// URL is in the form:\n//  /section\n//  /section/sectionId\n//  /section/sectionId/subsection\nexport function parseRoute() {\n    const parts = window.location.pathname.split('/')\n\n    switch (parts.length) {\n        case 2:\n            return {section: parts[1]}\n        case 3:\n            return {section: parts[1], sectionId: parts[2]}\n        case 4:\n            return {section: parts[1], sectionId: parts[2], subsection: parts[3]}\n        default:\n            return {}\n    }\n}\n\nexport function sectionNavLinks(section, sectionId) {\n    if (section === '') {\n        return;\n    }\n    if ((section === 'devices') && (!sectionId)) {\n        return subLinks['register']\n    }\n    return subLinks[section];\n}\n\nexport function isLoggedIn(token) {\n    return isUserStandard(token)\n}\n\nexport function isUserStandard(token) {\n    return isUser(Role.Standard, token)\n}\n\nexport function canUserAdministrate(token) {\n    return isUser(Role.Admin, token) || isUser(Role.Superuser, token)\n}\n\nexport function isUserAdmin(token) {\n    return isUser(Role.Admin, token)\n}\n\nexport function isUserSuperuser(token) {\n    return isUser(Role.Superuser, token)\n}\n\nexport function roleAsString(role) {\n    var str\n    switch (role) {\n        case Role.Standard:\n            str = \"Standard\"\t\n            break;\n        case Role.Admin:\n            str = \"Admin\"\n            break;\n        case Role.Superuser:\n            str = \"Superuser\"\n            break\n        default:\n            str= \"invalid role\"\n            break;\n    }\n    return str\n}\n\nfunction isUser(role, token) {\n    if (!token) return false\n    if (!token.role) return false\n\n    return (token.role >= role)\n}\n\nexport function getAuthToken(callback) {\n    // Get a fresh token and return it to the callback\n    // The token will be passed to the views\n    api.getAuthToken().then((resp) => {\n\n        var jwt = resp.headers.authorization\n\n        if (!jwt) {\n            callback({})\n            return\n        }\n        var token = jwtDecode(jwt)\n\n        if (!token) {\n            callback({})\n            return\n        }\n        callback(token)\n    })\n}\n\nexport function formatError(data) {\n    var message = T(data.code);\n    if (data.message) {\n        message += ': ' + data.message;\n    }\n    return message;\n}\n\nexport function saveAccount(account) {\n    sessionStorage.setItem('accountCode', account.orgid);\n    sessionStorage.setItem('accountName', account.name);\n}\n\nexport function getAccount() {\n    return {\n        orgid: sessionStorage.getItem('accountCode'),\n        name: sessionStorage.getItem('accountName'),\n    }\n}\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, {Component} from 'react';\nimport {Role} from './Constants'\nimport {T} from './Utils';\n\nconst linksStandard  = ['devices', 'groups'];\nconst linksAdmin     = ['devices', 'groups', 'accounts'];\nconst linksSuperuser = ['devices', 'groups', 'accounts', 'users'];\n\nclass Navigation extends Component {\n\n    link(l) {\n        if (this.props.sectionId) {\n            // This is the secondary menu\n            return '/' + this.props.section + '/' + this.props.sectionId + '/' + l;\n        } else {\n            return '/' + l;\n        }\n    }\n\n    render() {\n\n        var token = this.props.token\n        var links;\n\n        if (this.props.links) {\n            links = this.props.links;\n        } else {\n            switch(token.role) {\n                case Role.Admin:\n                    links = linksAdmin;\n                    break;\n                case Role.Superuser:\n                    links = linksSuperuser;\n                    break;\n                case Role.Standard:\n                    links = linksStandard\n                    break\n                default:\n                    links = []\n            }\n        }\n\n        return (\n          <ul className=\"p-navigation__links\" role=\"menu\">\n              {links.map((l) => {\n                  var active = '';\n                  if ((this.props.section === l) || (this.props.subsection === l)) {\n                      active = ' active'\n                  }\n                  return (\n                    <li key={l} className={'p-navigation__link' + active} role=\"menuitem\"><a href={this.link(l)}>{T(l)}</a></li>\n                  )\n              })}\n          </ul>\n        );\n    }\n}\n\nexport default Navigation;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, {Component} from 'react';\nimport {T, isLoggedIn} from './Utils'\n\n\nclass NavigationUser extends Component {\n    handleAccountChange = (e) => {\n        e.preventDefault()\n\n        // Get the account\n        var accountId = e.target.value;\n        var account = this.props.accounts.filter(a => {\n            return a.orgid === accountId\n        })[0]\n\n        this.props.onAccountChange(account)\n    }\n\n    renderAccounts(token) {\n        if (!isLoggedIn(token)) {\n            return <span />\n        }\n\n        if (this.props.accounts.length === 0) {\n            return <span />\n        }\n\n        return (\n            <li className=\"p-navigation__link\">\n                <form id=\"account-form\">\n                    <select value={this.props.selectedAccount.orgid} onChange={this.handleAccountChange}>\n                        {this.props.accounts.map(a => {\n                            return <option key={a.orgid} value={a.orgid} selected={a.orgid===this.props.selectedAccount.orgid}>{a.name}</option>;\n                        })}\n                    </select>\n                </form>\n            </li>\n        )\n    }\n\n    renderUser(token) {\n        if (isLoggedIn(token)) {\n            // The name is undefined if user authentication is off\n            if (token.name) {\n                return (\n                    <li className=\"p-navigation__link\"><a href=\"https://login.ubuntu.com/\" className=\"p-link--external\">{token.name}</a></li>\n                )\n            }\n        } else {\n            return (\n            <li className=\"p-navigation__link\"><a href=\"/login\" className=\"p-link--external\">{T('login')}</a></li>\n            )\n        }\n    }\n\n    renderUserLogout(token) {\n        if (isLoggedIn(token)) {\n            return (\n                <li className=\"p-navigation__link\"><a href=\"/logout\">{T('logout')}</a></li>\n            )\n        }\n    }\n\n    render() {\n\n        var token = this.props.token\n\n        return (\n          <ul className=\"p-navigation__links u-float-right\">\n              {this.renderAccounts(token)}\n              {this.renderUser(token)}\n              {this.renderUserLogout(token)}\n          </ul>\n        );\n    }\n}\n\nexport default NavigationUser;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, {Component} from 'react';\nimport Navigation from './Navigation';\nimport NavigationUser from './NavigationUser';\n\nclass Header extends Component {\n\n    render() {\n        return (\n            <header className=\"p-navigation p-navigation--dark\" role=\"banner\">\n                <div className=\"row\">\n                  <div className=\"p-navigation__banner\">\n                    <div className=\"p-navigation__logo\">\n                            <div className=\"nav_logo\">\n                                <a className=\"p-navigation__link\" href=\"/\">\n                                    <img className=\"p-navigation__image\" src=\"https://assets.ubuntu.com/v1/eb4e0ae3-iotdevice.svg\" alt=\"IoT Management Service\" />\n                                    &nbsp;\n                                    <h3>IoT Management</h3>\n                                </a>\n                            </div>\n\n                    </div>\n                    <a href=\"#navigation\" className=\"p-navigation__toggle--open\" title=\"menu\" onClick={this.handleToggleMenu}>\n                        <img src=\"/static/images/navigation-menu-plain.svg\" width=\"30px\" alt=\"menu\" />\n                    </a>\n                    <nav className=\"p-navigation__nav\">\n                        <span className=\"u-off-screen\"><a href=\"#navigation\">Jump to site</a></span>\n                        <Navigation section={this.props.section} token={this.props.token} />\n                        <NavigationUser token={this.props.token} \n                            accounts={this.props.accounts} selectedAccount={this.props.selectedAccount}\n                            onAccountChange={this.props.onAccountChange} />\n                    </nav>\n                  </div>\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default Header;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, {Component} from 'react';\nimport api from '../models/api';\nimport {T} from './Utils';\n\n\nclass Footer extends Component {\n\n  constructor(props) {\n      super(props)\n      this.state = {version: ''};\n\n      this.getVersion();\n  }\n\n  getVersion() {\n    api.version().then(response => {\n        this.setState({version: response.data.version})\n    })\n  }\n\n  render() {\n    return (\n      <footer className=\"spacer\">\n        <div>\n          <p><small>{T('version')}: {this.state.version}</small></p>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nimport React, {Component} from 'react';\n\n\nclass AlertBox extends Component {\n    render() {\n        if (this.props.message) {\n            var c = 'p-notification--';\n            if (this.props.type) {\n                c = c + this.props.type;\n            } else {\n                c = c + 'negative';\n            }\n\n            return (\n                <div className={c}>\n                    <p className=\"p-notification__response\">{this.props.message}</p>\n                </div>\n            );\n        } else {\n            return <span />;\n        }\n    }\n}\n\nexport default AlertBox;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nimport React, {Component} from 'react';\nimport AlertBox from './AlertBox';\nimport {T, isUserAdmin, isUserSuperuser} from './Utils';\n\nclass Accounts extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            message: null,\n            accounts: [],\n        };\n    }\n\n    renderTable(items) {\n        \n        if (items.length > 0) {\n            return (\n            <div>\n                <table>\n                <thead>\n                    <tr>\n                    <th>{T('code')}</th><th>{T('name')}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.renderRows(items)}\n                </tbody>\n                </table>\n            </div>\n            );\n        } else {\n            return (\n            <p>{T('no-accounts')}</p>\n            );\n        }\n    }\n\n    renderRows(items) {\n        return items.map((l) => {\n          let isSuperuser = isUserSuperuser(this.props.token);\n          return (\n            <tr key={l.id}>\n                <td>{isSuperuser ? <a href={'/accounts/' + l.orgid}>{l.orgid}</a> : l.orgid}</td>\n                <td>{l.name}</td>\n            </tr>\n          );\n        });\n    }\n\n    render () {\n\n        if (!isUserAdmin(this.props.token)) {\n            return (\n                <div className=\"row\">\n                <AlertBox message={T('error-no-permissions')} />\n                </div>\n            )\n        }\n        let isSuperuser = isUserSuperuser(this.props.token);\n\n        return (\n            <div className=\"row\">\n                <section className=\"row\">\n                    <div>\n                        <h2>{T('accounts')}\n                            {isSuperuser ?\n                                <div className=\"u-float-right\">\n                                    <a href=\"/accounts/new\" className=\"p-button--brand\" title={T('new-account')}>\n                                        <i className=\"fa fa-plus\" aria-hidden=\"true\" />\n                                    </a>\n                                </div>\n                                : ''\n                            }\n                        </h2>\n                    </div>\n                    <div className=\"col-12\">\n                        <AlertBox message={this.state.message} />\n                    </div>\n                </section>\n\n                <section className=\"row\">\n                    {this.renderTable(this.props.accounts)}\n                </section>\n            </div>\n        )\n    }\n\n}\n\nexport default Accounts;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nimport React, {Component} from 'react';\nimport api from '../models/api';\nimport AlertBox from './AlertBox';\nimport {T, isUserSuperuser, formatError} from './Utils';\n\nclass AccountEdit extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            title: null,\n            error: null,\n            hideForm: false,\n            account: {active: true},\n            country: '',\n        };\n    }\n\n    componentDidMount() {\n\n        if (this.props.id) {\n            this.setTitle('edit-account');\n            this.getAccount(this.props.id);\n        } else {\n            this.setTitle('new-account');\n        }\n    }\n\n    getAccount(id) {\n        api.accountsGet(id).then(response => {\n            this.setState({account: response.data.organization});\n        })\n        .catch((e) => {\n            this.setState({error: formatError(e.response.data), hideForm: true});\n        })\n    }\n\n    setTitle(title) {\n        this.setState({title: T(title)});\n    }\n\n    handleChangeCode = (e) => {\n        var account = this.state.account;\n        account['orgid'] = e.target.value;\n        this.setState({account: account});\n    }\n\n    handleChangeName = (e) => {\n        var account = this.state.account;\n        account['name'] = e.target.value;\n        this.setState({account: account});\n    }\n\n    handleChangeCountry = (e) => {\n        this.setState({country: e.target.value});\n    }\n\n    handleSaveClick = (e) => {\n        e.preventDefault();\n\n        if (this.props.id) {\n            api.accountsUpdate(this.props.id, this.state.account).then(response => {\n                window.location = '/accounts';\n            })\n            .catch(e => {\n                this.setState({error: formatError(e.response.data), hideForm: false});\n            })\n        } else {\n            api.accountsNew(this.state.account).then(response => {\n                window.location = '/accounts';\n            })\n            .catch(e => {\n                this.setState({error: formatError(e.response.data), hideForm: false});\n            })\n        }\n    }\n\n    render() {\n        if (!isUserSuperuser(this.props.token)) {\n            return (\n                <div className=\"row\">\n                <AlertBox message={T('error-no-permissions')} />\n                </div>\n            )\n        }\n\n        if (this.state.hideForm) {\n            return (\n                <div className=\"row\">\n                <AlertBox message={this.state.error} />\n                </div>\n            )\n        }\n\n        if ((this.props.id) && (!this.state.account.orgid)) {\n            return <div />\n        }\n\n        return (\n            <div className=\"row\">\n                <section className=\"row\">\n                    <h2>{this.state.title}</h2>\n\n                    <AlertBox message={this.state.error} />\n\n                    <form>\n                        <fieldset>\n                            {this.props.id ?\n                                <label htmlFor=\"code\">{T('code')}:\n                                    <input type=\"text\" id=\"code\" disabled=\"disabled\"\n                                           value={this.state.account.orgid} onChange={this.handleChangeCode}/>\n                                </label>\n                                : ''\n                            }\n                            <label htmlFor=\"name\">{T('name')}:\n                                <input type=\"text\" id=\"name\" placeholder={T('account-name-desc')}\n                                    value={this.state.account.name} onChange={this.handleChangeName}/>\n                            </label>\n                            {!this.props.id ?\n                                <label htmlFor=\"country\">{T('country')}:\n                                    <input type=\"text\" id=\"country\" placeholder={T('country-desc')}\n                                        value={this.state.country} onChange={this.handleChangeCountry}/>\n                                </label>\n                                : ''\n                            }\n                        </fieldset>\n                    </form>\n\n                    <div>\n                        <a href='/accounts' className=\"p-button--neutral\">{T('cancel')}</a>\n                        &nbsp;\n                        <a href='/accounts' onClick={this.handleSaveClick} className=\"p-button--brand\">{T('save')}</a>\n                    </div>\n                </section>\n                <br />\n            </div>\n        )\n\n    }\n}\n\nexport default AccountEdit;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nimport React, {Component} from 'react';\nimport {T} from './Utils';\n\nclass DialogBox extends Component {\n\n    render() {\n\n        if (this.props.message) {\n            return (\n                <div className=\"p-card warning\">\n                    <p>{this.props.message}</p>\n                    <div>\n                        <button onClick={this.props.handleCancelClick} className=\"p-button--neutral small\">\n                            {T('cancel')}\n                        </button>\n                        <button onClick={this.props.handleYesClick} className=\"p-button--brand small\">\n                            {T('ok')}\n                        </button>\n                    </div>\n                </div>\n            );\n        } else {\n            return <span />;\n        }\n    }\n}\n\nexport default DialogBox;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, {Component} from 'react';\nimport api from '../models/api';\nimport AlertBox from './AlertBox';\nimport DialogBox from './DialogBox';\nimport {T, formatError, isUserAdmin, roleAsString} from './Utils';\n\nclass Users extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            message: null,\n            users: [],\n            accounts: [],\n            confirmDelete: null,\n            showAccountsId: null,\n        };\n\n        this.getUsers();\n    }\n\n    getUsers () {\n        api.usersList().then(response => {\n            this.setState({users: response.data.users})\n        })\n    }\n\n    getAccountsForUser (username, userId) {\n        api.accountsForUsers(username).then(response => {\n            this.setState({accounts: response.data.organizations, showAccountsId: userId})\n        })\n    }\n\n    handleDelete = (e) => {\n        e.preventDefault();\n        this.setState({confirmDelete: e.target.getAttribute('data-key')});\n    }\n\n    handleDeleteUser = (e) => {\n        e.preventDefault();\n        var users = this.state.users.filter((user) => {\n          return user.username === this.state.confirmDelete;\n        });\n        if (users.length === 0) {\n          return;\n        }\n    \n        api.usersDelete(users[0].username).then(response => {\n            window.location = '/users';\n        })\n        .catch((e) => {\n            this.setState({error: formatError(e.response.data)});\n        })\n    }\n\n    handleDeleteUserCancel = (e) => {\n        e.preventDefault();\n        this.setState({confirmDelete: null});\n    }\n\n    handleClickAccount = (e) => {\n        e.preventDefault();\n        var accountId = e.target.getAttribute('data-account');\n        var userId = parseInt(e.target.getAttribute('data-user'), 10);\n        var username = e.target.getAttribute('data-username');\n\n        api.accountsUpdateForUser(username, accountId).then(response => {\n            this.getAccountsForUser(username, userId)\n        })\n    }\n\n    showAccounts = (e) => {\n        e.preventDefault();\n\n        var id = parseInt(e.target.getAttribute('data-key'), 10);\n        var username = e.target.getAttribute('data-user');\n        if (this.state.showAccountsId === id) {\n            this.setState({showAccountsId: null});\n        } else {\n            this.getAccountsForUser(username, id)\n        }\n    }\n\n    renderTable(items) {\n\n        if (items.length > 0) {\n            return (\n            <div>\n                <table>\n                <thead>\n                    <tr>\n                        <th /><th>{T('username')}</th><th>{T('name')}</th><th>{T('email')}</th><th>{T('role')}</th><th>{T('accounts')}</th>\n                    </tr>\n                </thead>\n                    {this.renderRows(items)}\n                </table>\n            </div>\n            );\n        } else {\n            return (\n            <p>{T('no-users')}</p>\n            );\n        }\n    }\n\n    renderActions(user) {\n        if (user.username !== this.state.confirmDelete) {\n            return (\n                <div>\n                    <a href={'/users/'.concat(user.username)} className=\"p-button--brand small\" title={T('edit-user')}><i className=\"fa fa-edit\" /></a>\n                    &nbsp;\n                    <button onClick={this.handleDelete} data-key={user.username} className=\"p-button--neutral small\" title={T('delete-user')}>\n                        <i className=\"fa fa-trash\" data-key={user.username} /></button>\n                </div>\n            );\n        } else {\n            return (\n                <DialogBox message={T('confirm-user-delete')} handleYesClick={this.handleDeleteUser} handleCancelClick={this.handleDeleteUserCancel} />\n            );\n        }\n    }\n\n    renderRows(items) {\n        return items.map((l) => {\n            var c = \"\";\n            if (l.id === this.state.showAccountsId) {\n            c = 'borderless';\n            }\n            return (\n              <tbody>\n                <tr key={l.id} className={c}>\n                    <td>\n                    {this.renderActions(l)}\n                    </td>\n                    <td className=\"overflow\" title={l.username}>{l.username}</td>\n                    <td className=\"overflow\" title={l.name}>{l.name}</td>\n                    <td className=\"overflow\" title={l.email}>{l.email}</td>\n                    <td className=\"overflow\" title={roleAsString(l.role)}>{roleAsString(l.role)}</td>\n                    <td className=\"overflow\">\n                        <button className=\"p-button--neutral small\" title={T('view-accounts')} data-key={l.id} data-user={l.username} onClick={this.showAccounts}>\n                            <i className=\"fa fa-building\" aria-hidden=\"true\" data-key={l.id} data-user={l.username} />\n                        </button>\n                    </td>\n                </tr>\n                {this.renderAccounts(l)}\n              </tbody>\n            );\n        });\n    }\n    \n    renderAccounts(item) {\n        if (item.id !== this.state.showAccountsId) {\n            return\n        }\n\n        var style;\n        var accounts = this.state.accounts.map(acc => {\n            if (acc.selected) {\n                style = 'p-button--brand';\n            } else {\n                style = 'p-button--neutral';\n            }\n            return (\n                <button key={acc.orgid} data-account={acc.orgid} data-user={item.id} data-username={item.username} onClick={this.handleClickAccount} className={style}>\n                {acc.name}\n                </button>\n            )\n        })\n\n        return (\n            <tr>\n                <td colSpan=\"6\">Select accounts for {item.name}:<br /> {accounts}</td>\n            </tr>\n        )\n    }\n\n    render () {\n        if (!isUserAdmin(this.props.token)) {\n            return (\n                <div className=\"row\">\n                <AlertBox message={T('error-no-permissions')} />\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"row\">\n                <section className=\"row\">\n                    <div>\n                        <h2>{T('users')}\n                            <div className=\"u-float-right\">\n                                <a href=\"/users/new\" className=\"p-button--brand\" title={T('new-user')}>\n                                    <i className=\"fa fa-plus\" aria-hidden=\"true\" />\n                                </a>\n                            </div>\n                        </h2>\n                    </div>\n                    <div className=\"col-12\">\n                        <AlertBox message={this.state.message} />\n                    </div>\n                </section>\n\n                <section className=\"row\">\n                    {this.renderTable(this.state.users)}\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default Users;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, {Component} from 'react';\nimport api from '../models/api';\nimport AlertBox from './AlertBox';\nimport {T, formatError, isUserSuperuser} from './Utils';\n\nclass UserEdit extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: null,\n            user: {},\n            error: null,\n            hideForm: false,\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.username) {\n            this.setTitle('edit-user');\n            this.getUser(this.props.username);\n        } else {\n            this.setTitle('new-user');\n        }\n    }\n\n    setTitle(title) {\n        this.setState({title: T(title)});\n    }\n\n    getUser(userId) {\n        api.usersGet(userId).then((response) => {\n            this.setState({\n                user: response.data.user, \n                hideForm: false,\n            });\n        })\n        .catch((e) => {\n            this.setState({error: formatError(e.response.data)});\n        })\n    }\n\n    handleChangeUsername = (e) => {\n        var user = this.state.user;\n        user.username = e.target.value;\n        this.setState({user: user});\n    }\n\n    handleChangeName = (e) => {\n        var user = this.state.user;\n        user.name = e.target.value;\n        this.setState({user: user});\n    }\n\n    handleChangeEmail = (e) => {\n        var user = this.state.user;\n        user.email = e.target.value;\n        this.setState({user: user});\n    }\n\n    handleChangeRole = (e) => {\n        var user = this.state.user;\n        user.role = parseInt(e.target.value, 10);\n        this.setState({user: user});\n    }\n\n    handleSaveClick = (e) => {\n        e.preventDefault();\n\n        if (this.props.username) {\n            // Update the existing user\n            api.usersUpdate(this.props.username, this.state.user).then(response => {\n                window.location = '/users';\n            })\n            .catch(e => {\n                this.setState({error: formatError(e.response.data), hideForm: false});\n            })\n        } else {\n            // Create a new user\n            api.usersNew(this.state.user).then(response => {\n                window.location = '/users';\n            })\n            .catch(e => {\n                this.setState({error: formatError(e.response.data), hideForm: false});\n            })\n        }\n    }\n\n    renderError() {\n        if (this.state.error) {\n            return (\n                <AlertBox message={this.state.error} />\n            );\n        }\n    }\n\n    render() {\n        if (!isUserSuperuser(this.props.token)) {\n            return (\n                <div className=\"row\">\n                <AlertBox message={T('error-no-permissions')} />\n                </div>\n            )\n        }\n\n        if (this.state.hideForm) {\n            return (\n                <div className=\"row\">\n                <AlertBox message={this.state.error} />\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"row\">\n                <section className=\"row\">\n                      <h2>{this.state.title}</h2>\n\n                        <AlertBox message={this.state.error} />\n\n                        <form>\n                            <fieldset>\n                                <label htmlFor=\"username\">{T('username')}:\n                                    <input type=\"text\" id=\"username\" placeholder={T('user-username-desc')}\n                                        value={this.state.user.username} onChange={this.handleChangeUsername} />\n                                </label>\n                                <label htmlFor=\"name\">{T('name')}:\n                                    <input type=\"text\" id=\"name\" placeholder={T('user-name-desc')}\n                                        value={this.state.user.name} onChange={this.handleChangeName}/>\n                                </label>\n                                <label htmlFor=\"email\">{T('email')}:\n                                    <input type=\"text\" id=\"email\" placeholder={T('user-email-desc')}\n                                        value={this.state.user.email} onChange={this.handleChangeEmail}/>\n                                </label>\n                                <label htmlFor=\"role\">{T('role')}:\n                                    <select value={this.state.user.role} id=\"role\" onChange={this.handleChangeRole}>\n                                        <option />\n                                        <option key=\"standard\" value=\"100\">Standard</option>\n                                        <option key=\"admin\" value=\"200\">Admin</option>\n                                        <option key=\"superuser\" value=\"300\">Superuser</option>\n                                    </select>\n                                </label>\n                            </fieldset>\n                        </form>\n\n                        <div>\n                            <a href='/users' className=\"p-button--neutral\">{T('cancel')}</a>\n                            &nbsp;\n                            <a href='/users' onClick={this.handleSaveClick} className=\"p-button--brand\">{T('save')}</a>\n                        </div>\n                </section>\n                <br />\n            </div>\n        )\n    }\n}\n\nexport default UserEdit;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\n\nexport default function If({ cond, children }) {\n  if (!cond) return null\n  return (\n    Array.isArray(children)\n      ? ( <div>{children}</div> )\n      : children\n  )\n}\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, {Component} from 'react';\nimport moment from 'moment';\nimport AlertBox from './AlertBox';\nimport If from './If';\nimport {T} from './Utils';\n\nclass Device extends Component {\n\n    renderActions() {\n        if ((!this.props.actions) || (this.props.actions.length===0)) {\n            return <p>{T('no-actions')}</p>\n        }\n\n        return (\n            <table className=\"p-card__content\">\n                <thead>\n                    <tr>\n                        <th className=\"small\">{T('created')}</th>\n                        <th className=\"small\">{T('modified')}</th>\n                        <th className=\"small\">{T('action')}</th>\n                        <th className=\"small\">{T('status')}</th>\n                        <th className=\"overflow\">{T('result')}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {this.props.actions.map(a => {\n                    return (\n                        <tr>\n                            <td>{moment(a.created).format('llll')}</td>\n                            <td>{moment(a.modified).format('llll')}</td>\n                            <td>{a.action}</td>\n                            <td>{a.status}</td>\n                            <td>{a.message}</td>\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </table>\n        )\n    }\n\n    render () {\n        var d = this.props.client;\n        if (!d.device) {return <div>Loading...</div>};\n\n        return (\n            <div className=\"row\">\n                <h1 className=\"tight\">{d.device.brand} {d.device.model}</h1>\n                <h4 className=\"subtitle\">{d.device.serial}</h4>\n\n                <section className=\"row spacer\">\n                    <div className=\"col-12\">\n                        <AlertBox message={this.props.message} />\n                    </div>\n                </section>\n\n                <If cond={!this.props.message}>\n                    <section className=\"row spacer\">\n                        <div className=\"p-card--highlighted col-6\">\n                            <table className=\"p-card__content\">\n                                <tbody>\n                                    <tr>\n                                        <td>{T('last-update')}:</td><td>{moment(d.device.lastRefresh).format('llll')}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{T('registered')}:</td><td>{moment(d.device.created).format('llll')}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </section>\n\n                    <section className=\"row spacer\">\n                        <div className=\"p-card\">\n                            <h3 className=\"p-card__title\">{T('system-info')}</h3>\n                            <table className=\"p-card__content\">\n                                <tbody>\n                                    <tr>\n                                        <td>{T('model')}:</td><td>{d.device.brand} {d.device.model}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{T('serial-number')}:</td><td>{d.device.serial}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{T('os-version')}:</td><td>{d.device.version.osId} {d.device.version.osVersionId}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{T('series')}:</td><td>{d.device.version.series}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{T('version')}:</td><td>{d.device.version.version}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{T('kernel-version')}:</td><td>{d.device.version.kernelVersion}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{T('on-classic')}:</td><td>{d.device.version.onClassic ? 'true': 'false'}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </section>\n\n                    <section className=\"row spacer\">\n                        <div className=\"p-card\">\n                            <h3 className=\"p-card__title\">{T('actions')}</h3>\n                            {this.renderActions()}\n                        </div>\n                    </section>\n\n                </If>\n            </div>\n\n\n\n        )\n    }\n}\n\nexport default Device\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nimport React, {Component} from 'react';\nimport moment from 'moment';\nimport AlertBox from './AlertBox';\nimport {T} from './Utils';\n\n\nclass Devices extends Component {\n\n    getAge(m) {\n        var start = moment(m);\n        var end = moment()\n        var dur = moment.duration(end.diff(start));\n        var d = dur.asMinutes()\n        if (d < 2) {\n            return <i className=\"fa fa-clock led-green\" title={start.format('llll')} />\n        } else if (d < 5) {\n            return <i className=\"fa fa-clock led-orange\" title={start.format('llll')} />\n        } else {\n            return <i className=\"fa fa-clock led-red\" title={start.format('llll')} />\n        }\n    }\n\n    renderTable(items) {\n        if (items.length > 0) {\n            return (\n            <div>\n                <table>\n                <thead>\n                    <tr>\n                    <th>{T('brand')}</th><th>{T('model')}</th><th>{T('serial')}</th><th>{T('reg-date')}</th><th>{T('last-update')}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.renderRows(items)}\n                </tbody>\n                </table>\n            </div>\n            );\n        } else {\n            return (\n            <p>{T('no-devices-connected')}</p>\n            );\n        }\n    }\n\n    renderRows(items) {\n        return items.map((l) => {\n          return (\n              <tr key={l.registrationId}>\n                  <td className=\"overflow\"><a href={'/devices/' + l.deviceId+ '/info'}>{l.brand}</a></td>\n                  <td className=\"overflow\"><a href={'/devices/' + l.deviceId+ '/info'}>{l.model}</a></td>\n                  <td className=\"overflow\"><a href={'/devices/' + l.deviceId+ '/info'}>{l.serial}</a></td>\n                  <td className=\"overflow\">{moment(l.created).format('lll')}</td>\n                  <td>\n                      {moment(l.lastRefresh).format('lll')}\n                      &nbsp;\n                      {this.getAge(l.lastRefresh)}\n                  </td>\n              </tr>\n          );\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"row\">\n                <section className=\"row\">\n                    <h2>{T('devices-connected')}</h2>\n                    <div className=\"col-12\">\n                        <AlertBox message={this.props.message} />\n                    </div>\n                </section>\n\n                <section className=\"row spacer\">\n                    {this.renderTable(this.props.devices)}\n                </section>\n            </div>\n        )\n    }\n\n}\n\nexport default Devices;","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, {Component} from 'react';\nimport AlertBox from './AlertBox';\nimport {T, canUserAdministrate} from './Utils';\nimport {Status} from './Constants';\n\n\nclass Register extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            message: null,\n        };\n    }\n\n    getStatus(s) {\n        let status = T(Status[s])\n        if (s === 1) {\n            return <span><i className=\"fa fa-clock led-orange\" title={status} />&nbsp;{status}</span>\n        } else if (s === 2) {\n            return <span><i className=\"fa fa-clipboard-check led-green\" title={status} />&nbsp;{status}</span>\n        } else {\n            return <span><i className=\"fa fa-times-circle led-red\" title={status} />&nbsp;{status}</span>\n        }\n    }\n\n    copyToClipboard = (e) => {\n        e.preventDefault()\n        const el = document.createElement('textarea');\n        el.value = e.target.getAttribute('data-key');\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n    }\n\n    renderTable(items) {\n        \n        if (!items) {\n            return\n        }\n        if (items.length > 0) {\n            return (\n            <div>\n                <table>\n                <thead>\n                    <tr>\n                        <th className=\"small\" /><th>{T('id')}</th><th>{T('brand')}</th><th>{T('model')}</th><th>{T('serial')}</th><th className=\"overflow\">{T('device-key')}</th>\n                        <th className=\"xsmall\">{T('status')}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.renderRows(items)}\n                </tbody>\n                </table>\n            </div>\n            );\n        } else {\n            return (\n            <p>{T('no-devices')}</p>\n            );\n        }\n    }\n\n    renderRows(items) {\n        return items.map((l) => {\n          return (\n            <tr key={l.id}>\n                <td>\n                    <a href={'/register/' + l.id} className=\"p-button--neutral small\"><i className=\"fa fa-edit\" /></a>\n                    {l.device.deviceKey ?\n                        <a href=\"#\" onClick={this.copyToClipboard} data-key={l.device.deviceKey} className=\"p-button--neutral small\" title={T('copy-device-key')}>\n                        <i className=\"fa fa-clipboard\" data-key={l.device.deviceKey} /></a> : ''}\n                </td>\n                <td className=\"overflow\">{l.id}</td>\n                <td className=\"overflow\">{l.device.brand}</td>\n                <td className=\"overflow\">{l.device.model}</td>\n                <td className=\"overflow\">{l.device.serial}</td>\n                <td className=\"overflow\" title={l.device.deviceKey}>\n                    {(l.device.deviceKey && l.device.deviceKey.substr(0,40)) || ''}\n                </td>\n                <td>{this.getStatus(l.status)}</td>\n            </tr>\n          );\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"row\">\n                <section className=\"row\">\n                    <h2>\n                        {T('register-devices')}\n                        {canUserAdministrate(this.props.token) ?\n                            <div className=\"u-float-right\">\n                                <a href=\"/register/new\" className=\"p-button--brand\" title={T('new-device')}>\n                                    <i className=\"fa fa-plus\" aria-hidden=\"true\" />\n                                </a>\n                            </div>\n                            : ''\n                        }\n                    </h2>\n                    <div className=\"col-12\">\n                        <AlertBox message={this.state.message} />\n                    </div>\n                </section>\n\n                <section className=\"row spacer\">\n                    {this.renderTable(this.props.devices)}\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default Register;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, {Component} from 'react';\nimport api from '../models/api';\nimport AlertBox from './AlertBox';\nimport {T, isUserAdmin, formatError} from './Utils';\n\n\nconst statusOptions = [{id:1, name:'Waiting'}, {id:2, name:'Enrolled'}, {id:3, name:'Disabled'}]\n\n\nclass RegisterEdit extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            title: null,\n            error: null,\n            hideForm: false,\n            deviceId: '',\n            status: 0,\n            statusTo: 0,\n            deviceData: '',\n            device: {orgid: this.props.account.orgid},\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.id) {\n            this.setTitle('edit-device');\n            this.getDevice(this.props.id);\n        } else {\n            this.setTitle('new-device');\n        }\n    }\n\n    getDevice(id) {\n        api.clientsGet(this.props.account.orgid, id).then(response => {\n            this.setState({device: response.data.enrollment.device,\n                status: response.data.enrollment.status, statusTo:response.data.enrollment.status,\n                deviceData: response.data.enrollment.deviceData,\n                deviceId: response.data.enrollment.id});\n        })\n        .catch((e) => {\n            this.setState({error: formatError(e.response.data), hideForm: true});\n        })\n    }\n\n    setTitle(title) {\n        this.setState({title: T(title)});\n    }\n\n    handleChangeBrand = (e) => {\n        var device = this.state.device;\n        device.brand = e.target.value;\n        this.setState({device: device});\n    }\n\n    handleChangeModel = (e) => {\n        var device = this.state.device;\n        device.model = e.target.value;\n        this.setState({device: device});\n    }\n\n    handleChangeSerial = (e) => {\n        var device = this.state.device;\n        device.serial = e.target.value;\n        this.setState({device: device});\n    }\n\n    handleChangeStatus = (e) => {\n        let status = parseInt(e.target.value, 10);\n        this.setState({statusTo: status});\n    }\n    \n    handleSaveClick = (e) => {\n        e.preventDefault();\n\n        if (this.props.id) {\n            // Update the existing device\n            api.clientsUpdate(this.props.account.orgid, this.state.deviceId, this.state.statusTo, this.state.deviceData).then(response => {\n                window.location = '/register';\n            })\n            .catch(e => {\n                this.setState({error: formatError(e.response.data), hideForm: false});\n            })\n        } else {\n            // Create a new device\n            let device = this.state.device\n            device.deviceData = this.state.deviceData\n            api.clientsNew(this.props.account.orgid, device).then(response => {\n                window.location = '/register';\n            })\n            .catch(e => {\n                this.setState({error: formatError(e.response.data), hideForm: false});\n            })\n        }\n    }\n\n    handleFileUpload = (e) => {\n        let reader = new FileReader();\n        let file = e.target.files[0];\n\n        reader.onload = (upload) => {\n            this.setState({\n                deviceData: upload.target.result.split(',')[1]\n            });\n        }\n\n        reader.readAsDataURL(file);\n    }\n\n    render () {\n        if (!isUserAdmin(this.props.token)) {\n            return (\n                <div className=\"row\">\n                <AlertBox message={T('error-no-permissions')} />\n                </div>\n            )\n        }\n\n        if (this.state.hideForm) {\n            return (\n                <div className=\"row\">\n                <AlertBox message={this.state.error} />\n                </div>\n            )\n        }\n\n        let disabled = this.state.status ? true : false;\n\n        return (\n            <div className=\"row\">\n                <section className=\"row\">\n                    <h2>{this.state.title}</h2>\n                    <div>{T('register-desc')}<br /></div>\n\n                    <AlertBox message={this.state.error} />\n\n                    <form>\n                        <fieldset>\n                            {\n                                this.props.id ?\n                                    <label htmlFor=\"id\">{T('id')}:\n                                        <input type=\"text\" id=\"id\"\n                                               value={this.state.deviceId} disabled={true} />\n                                    </label>\n                                    :\n                                    ''\n                            }\n\n                            <label htmlFor=\"brand\">{T('brand')}:\n                                <input type=\"text\" id=\"brand\" placeholder={T('brand-desc')}\n                                    value={this.state.device.brand} onChange={this.handleChangeBrand} disabled={disabled} />\n                            </label>\n                            <label htmlFor=\"model\">{T('model')}:\n                                <input type=\"text\" id=\"model\" placeholder={T('model-desc')}\n                                       value={this.state.device.model} onChange={this.handleChangeModel} disabled={disabled} />\n                            </label>\n                            <label htmlFor=\"serial\">{T('serial')}:\n                                <input type=\"text\" id=\"serial\" placeholder={T('serial-desc')}\n                                       value={this.state.device.serial} onChange={this.handleChangeSerial} disabled={disabled} />\n                            </label>\n\n                            <label htmlFor=\"key\">{T('device-data')}:\n                                {this.state.deviceData ? <a href={api.clientsGetDownloadHREF(this.props.account.orgid,this.state.deviceId)} className=\"p-button--base\" title={T('download-file')}><i className=\"fa fa-paperclip\" /></a> : ''}\n                                <input type=\"file\" onChange={this.handleFileUpload} className=\"p-button--base\"/>\n                            </label>\n\n                            <label>\n                                {this.state.status > 0 ?\n                                    <select value={this.state.statusTo} onChange={this.handleChangeStatus}>\n                                        {statusOptions.map(a => {\n                                            return <option key={a.id} value={a.id}\n                                                           selected={a.id === this.state.statusTo}>{a.name}</option>;\n                                        })}\n                                    </select>\n                                    :\n                                    ''\n                                }\n                            </label>\n                        </fieldset>\n                    </form>\n\n                    <div>\n                        <a href='/register' className=\"p-button--neutral\">{T('cancel')}</a>\n                        &nbsp;\n                        <a href='/register' onClick={this.handleSaveClick} className=\"p-button--brand\">{T('save')}</a>\n                    </div>\n                </section>\n                <br />\n            </div>\n        )\n\n    }\n}\n\nexport default RegisterEdit;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { Component } from 'react'\n\nclass Pagination extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 1,\n      query: null,\n      maxRecords: props.pageSize | 5,\n    }\n  }\n\n  pageUp = () => {\n    var pages = this.calculatePages();\n    var page = this.state.page + 1;\n    if (page > pages) {\n        page = pages;\n    }\n    this.setState({page: page});\n    this.signalPageChange(page);\n  }\n\n  pageDown = () => {\n    var page = this.state.page - 1;\n    if (page <= 0) {\n        page = 1;\n    }\n    this.setState({page: page});\n    this.signalPageChange(page);\n  }\n\n  signalPageChange(page) {\n    // Signal the rows that the owner should display\n    var startRow = ((page - 1) * this.state.maxRecords);\n\n    this.props.pageChange(startRow, startRow + this.state.maxRecords);\n  }\n\n  calculatePages() {\n    // Use the filtered row count when we a query has been entered\n    var length = this.props.displayRows.length;\n\n    var pages = parseInt(length / this.state.maxRecords, 10);\n    if (length % this.state.maxRecords > 0) {\n        pages += 1;\n    }\n\n    return pages;\n  }\n\n  renderPaging() {\n    var pages = this.calculatePages();\n    if (pages > 1) {\n        return (\n            <div className=\"u-float--right spacer\">\n                <button className=\"p-button--neutral small\" href=\"\" onClick={this.pageDown}>&laquo;</button>\n                <span>&nbsp;{this.state.page} of {pages}&nbsp;</span>\n                <button className=\"p-button--neutral small\" href=\"\" onClick={this.pageUp}>&raquo;</button>\n            </div>\n        );\n    } else {\n        return <div className=\"u-float--right\" />;\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"col-12\">\n            {this.renderPaging()}\n        </div>\n    );\n  }\n}\n\nexport default Pagination\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nimport React, {Component} from 'react';\nimport api from '../models/api';\nimport Pagination from './Pagination';\nimport {LoadingImage} from './Constants';\nimport {T} from './Utils';\nimport filesize from 'filesize'\n\nconst PAGELENGTH = 5;\n\nclass SnapDialogBox extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            snapName: '',\n            snaps: [],\n            loadingSearch: false,\n\n            page: 1,\n            startRow: 0,\n            endRow: PAGELENGTH,\n        };\n    }\n\n    searchStore() {\n        if (this.state.snapName.length===0) {\n            return\n        }\n        this.setState({loadingSearch: true})\n        api.storeSearch(this.state.snapName).then(response => {\n            if ((response.data._embedded) && (response.data._embedded['clickindex:package'])) {\n                this.setState({snaps: response.data._embedded['clickindex:package'], loadingSearch: false, message: null, messageType: null})\n            }\n        })\n    }\n\n    handleSearchChange = (e) => {\n        e.preventDefault()\n        this.setState({snapName: e.target.value})\n    }\n\n    handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            this.handleSearchStore(e)\n        }\n    }\n\n    handleSearchStore = (e) => {\n        e.preventDefault()\n        this.searchStore()\n    }\n\n    handleInstall = (e) => {\n        e.preventDefault()\n        var snap = e.target.getAttribute('data-key')\n\n        this.props.handleInstallClick(snap);\n    }\n\n    handleRecordsForPage = (startRow, endRow) => {\n        this.setState({startRow: startRow, endRow: endRow});\n    }\n\n    renderSnaps(snaps) {\n        if (snaps.length > 0) {\n\n            return (\n                <div>\n                    <p>{snaps.length} snaps found</p>\n                    <table>\n                        <tbody>\n                        {snaps.slice(this.state.startRow, this.state.endRow).map(s => {\n                            return (\n                                <tr key={s.snap_id} title={s.description}>\n                                    <td className=\"small\">\n                                        <button data-key={s.package_name} className=\"p-button--neutral small\" title={T(\"install-on-device\")} onClick={this.handleInstall}>\n                                            <i data-key={s.package_name} className=\"fa fa-cloud-upload-alt\" aria-hidden=\"true\" />\n                                        </button>\n                                    </td>\n                                    <td className=\"overflow\">\n                                        <b>{s.package_name}</b> {s.version}\n                                    </td>\n                                    <td className=\"overflow\">\n                                        {s.developer_name} ({filesize(s.binary_filesize)})\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </table>\n                </div>\n            )\n        } else {\n            return <div>No snaps found.</div>\n        }\n    }\n\n    render() {\n        var snaps = this.state.snaps\n\n        if (this.props.message) {\n            return (\n                <div className=\"p-card col-4\">\n                    <h3 className=\"p-card__title\">{T('snap-store')}</h3>\n                    <p>\n                        {this.state.loadingSearch ? <img src={LoadingImage} alt={T('loading')} /> : ''}\n                        {this.props.message}\n                    </p>\n                    <p>\n                        <form className=\"p-search-box\">\n                          <input className=\"p-search-box__input\" type=\"search\" name=\"snapname\" onKeyPress={this.handleKeyPress} onChange={this.handleSearchChange} placeholder={T('search-store')} />\n                          <button type=\"reset\" className=\"p-search-box__reset\" alt=\"reset\"><i className=\"p-icon--close\" /></button>\n                          <button type=\"submit\" onClick={this.handleSearchStore} className=\"p-search-box__button\" alt=\"search\"><i className=\"p-icon--search\" /></button>\n                        </form>\n                    </p>\n\n                    <Pagination displayRows={snaps}\n                            pageSize={PAGELENGTH}\n                            pageChange={this.handleRecordsForPage} />\n\n                    {this.renderSnaps(snaps)}\n                    <div>\n                        <button onClick={this.props.handleCancelClick} className=\"p-button--brand\">\n                            {T('close')}\n                        </button>\n                    </div>\n                </div>\n            );\n        } else {\n            return <span />;\n        }\n    }\n}\n\nexport default SnapDialogBox;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, {Component} from 'react';\nimport moment from 'moment';\nimport api from '../models/api';\nimport SnapDialogBox from './SnapDialogBox';\nimport If from './If';\nimport AlertBox from './AlertBox';\nimport {T} from './Utils';\n\nclass DeviceSnaps extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            message: null,\n            messageType: null,\n            showInstall: false,\n            snapName: '',\n            snapSettings: null,\n            settings: {},\n            hideForm: false,\n        };\n\n    }\n\n    findSnap(name) {\n        return this.props.snaps.filter( s => s.name===name)[0]\n    }\n\n    handleRefreshList = (e) => {\n        e.preventDefault()\n        api.snapsInstallRefresh(this.props.account.orgid, this.props.device).then(response => {\n            this.setState({\n                message: 'Sent request to list snaps',\n                messageType: 'information',\n            })\n        })\n    }\n\n    handleInstall= (e) => {\n        e.preventDefault()\n        this.setState({showInstall: true})\n    }\n\n    handleSnapInstall = (snap) => {\n        api.snapsInstall(this.props.account.orgid, this.props.device, snap).then(response => {\n            this.setState({\n                message: 'Sent request to install snap: ' + snap,\n                messageType: 'information',\n            })\n        })\n    }\n\n    handleSnapOnChange= (e) => {\n        e.preventDefault();\n        this.setState({snapName: e.target.value});\n    }\n\n    handleRefresh = (e) => {\n        e.preventDefault()\n\n        var snap = e.target.getAttribute('data-key')\n        api.snapsUpdate(this.props.account.orgid, this.props.device, snap, 'refresh').then(response => {\n            this.setState({message: 'Sent request to refresh snap: ' + snap, messageType: 'information'});\n        })\n    }\n\n    handleToggle = (e) => {\n        e.preventDefault()\n\n        var snap = e.target.getAttribute('data-key')\n\n        // Check if we need to activate or deactivate the snap\n        var s = this.findSnap(snap)\n        var action = 'enable';\n        if (s.status === 'active') {\n            action = 'disable';\n        }\n\n        api.snapsUpdate(this.props.account.orgid, this.props.device, snap, action).then(response => {\n            this.setState({message: 'Sent request to enable/disable snap: ' + snap, messageType: 'information'});\n        })\n    }\n\n    handleRemove = (e) => {\n        e.preventDefault()\n        var snap = e.target.getAttribute('data-key')\n        api.snapsRemove(this.props.account.orgid, this.props.device, snap).then(response => {\n            this.setState({message: 'Sent request to remove snap: ' + snap, messageType: 'information'});\n        })\n    }\n\n    handleDialogCancel = (e) => {\n        e.preventDefault();\n        this.setState({showInstall: false});\n    }\n\n    handleShowSettings = (e) => {\n        e.preventDefault();\n        var snap = e.target.getAttribute('data-key');\n        if (this.state.snapSettings === snap) {\n            this.setState({snapSettings: null, settings: {}})\n        } else {\n            var s = this.findSnap(snap)\n            if (s.config.length===0) {\n                s.config = '{}'\n            }\n            var settings = JSON.stringify( JSON.parse(s.config), null, 2) // pretty print\n            this.setState({snapSettings: snap, settings: settings})\n        }\n    }\n\n    handleSettingsChange = (e) => {\n        e.preventDefault();\n        this.setState({settings: e.target.value})\n    }\n\n    handleSettingsUpdate = (e) => {\n        e.preventDefault();\n        var snap = e.target.getAttribute('data-key');\n\n        api.snapsSettingsUpdate(this.props.account.orgid, this.props.device, snap, this.state.settings).then(response => {\n            this.setState({snapSettings: null, message: 'Sent request to update snap: ' + snap,\n                    messageType: 'information',\n            })\n        })\n    }\n\n    renderShowInstall() {\n        if (this.state.showInstall) {\n            return (\n                <SnapDialogBox message={T('confirm-snap-install')} \n                    handleTextChange={this.handleSnapOnChange}\n                    handleInstallClick={this.handleSnapInstall} handleCancelClick={this.handleDialogCancel} />\n            );\n        }\n    }\n\n    renderSettings(snap) {\n        if (snap.name !== this.state.snapSettings) {\n            return\n        }\n\n        return (\n            <tr>\n                <td colSpan=\"6\">\n                    <form>\n                        <fieldset>\n                            <label htmlFor={this.state.snapSettings}>\n                                Settings for {this.state.snapSettings}:\n                                <textarea className=\"col-12\" rows=\"4\" value={this.state.settings} data-key={this.state.snapSettings} onChange={this.handleSettingsChange} />\n                            </label>\n                        </fieldset>\n                        <button className=\"p-button--brand\" onClick={this.handleSettingsUpdate} data-key={snap.name}>{T('update')}</button>\n                    </form>\n                </td>\n            </tr>\n        )\n    }\n\n    render () {\n        var tableWidth = '';\n        var hide = '';\n        if (this.state.showInstall) {\n            tableWidth = ' col-8';\n            hide = 'hide';\n        }\n        var d = this.props.device;\n        if (!d.device) {return <div>Loading...</div>};\n\n        return (\n            <div className=\"row\">\n                <h1 className=\"tight\">{d.device.orgid} {d.device.model}</h1>\n                <h4 className=\"subtitle\">{d.device.serial}</h4>\n\n                <section className=\"row spacer\">\n                    <div className=\"col-12\">\n                        <AlertBox message={this.state.message} type={this.state.messageType} />\n                    </div>\n                </section>\n\n                <If cond={!this.state.hideForm}>\n                    <section className=\"row spacer\">\n                        <div className={'p-card' + tableWidth}>\n                            <h3 className=\"p-card__title\">\n                                {T('installed-snaps')}\n\n                                <div className=\"u-float-right\">\n                                    <button onClick={this.handleRefreshList} className=\"p-button--brand\" title={T('refresh-snap-list')}>\n                                        <i className=\"fa fa-sync\" aria-hidden=\"true\" />\n                                    </button>\n                                    <button onClick={this.handleInstall} className=\"p-button--brand\" title={T('install-snap')}>\n                                        <i className=\"fa fa-plus\" aria-hidden=\"true\" />\n                                    </button>\n                                </div>\n                            </h3>\n                            <p title={T('last-update')}>{moment(d.device.lastRefresh).format('llll')}</p>\n\n                            <table className=\"p-card__content\">\n                                <thead>\n                                    <tr>\n                                        <th className={hide} />\n                                        <th className=\"small\">{T('snap')}</th><th className=\"small\">{T('channel')}</th><th>{T('version')}</th><th className=\"xsmall\">{T('status')}</th>\n                                        <th className=\"xsmall\">{T('settings')}</th>\n                                    </tr>\n                                </thead>\n                                {this.props.snaps.map((s) => {\n                                    var c = '';\n                                    if (s.name === this.state.snapSettings) {\n                                        c = 'borderless'\n                                    }\n                                    return (\n                                        <tbody>\n                                        <tr key={s.name} className={c}>\n                                            <td className={hide}>\n                                                <button onClick={this.handleRefresh}  className=\"small u-float\" title={T(\"refresh\")} data-key={s.name}>\n                                                    <i className=\"fa fa-sync\" aria-hidden=\"true\" data-key={s.name} />\n                                                </button>\n                                                <button onClick={this.handleToggle}  className=\"small\" title={T(\"toggle-status\")} data-key={s.name}>\n                                                    <i className=\"fa fa-plug\" aria-hidden=\"true\" data-key={s.name} />\n                                                </button>\n                                                <button onClick={this.handleRemove} className=\"small\" title={T(\"remove\")} data-key={s.name}>\n                                                    <i className=\"fa fa-times\" aria-hidden=\"true\" data-key={s.name} />\n                                                </button>\n                                            </td>\n                                            <td title={s.description}>{s.name}</td>\n                                            <td>{s.channel}</td>\n                                            <td>{s.version}</td>\n                                            <td>{s.status}</td>\n                                            <td>\n                                                <button className=\"p-button--neutral small\" title={T('view-settings')} data-key={s.name} onClick={this.handleShowSettings}>\n                                                    <i className=\"fa fa-sliders-h\" aria-hidden=\"true\" data-key={s.name} />\n                                                </button>\n                                            </td>\n                                        </tr>\n                                        {this.renderSettings(s)}\n                                        </tbody>\n                                    )\n                                })}\n                            </table>\n\n                        </div>\n                        {this.renderShowInstall()}\n                    </section>\n                </If>\n            </div>\n        );\n    }\n}\n\nexport default DeviceSnaps","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nimport React, {Component} from 'react';\nimport AlertBox from './AlertBox';\nimport {canUserAdministrate, formatError, T} from './Utils';\nimport api from \"../models/api\";\n\nclass Groups extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: null,\n            devices: [],\n            devicesExcluded: [],\n        }\n    }\n\n    refresh(orgid, name) {\n        this.getGroupDevices(orgid, name)\n        this.getGroupExcludedDevices(orgid, name)\n    }\n\n    getGroupDevices(orgid, name) {\n        api.groupsGetDevices(orgid, name).then(response => {\n            this.setState({devices: response.data.devices})\n        }).catch(e => {\n            this.setState({message: formatError(e.response.data), devices: []});\n        })\n    }\n\n    getGroupExcludedDevices (orgid, name) {\n        api.groupsGetDevicesExcluded(orgid, name).then(response => {\n            this.setState({devicesExcluded: response.data.devices})\n        }).catch(e => {\n            this.setState({message: formatError(e.response.data), devicesExcluded: []});\n        })\n    }\n\n    handleGroupClick = (e) => {\n        e.preventDefault();\n\n        let selected = e.target.getAttribute('data-key')\n        if (this.state.name === selected) {\n            // Deselect the group\n            this.setState({name: null, devices: [], devicesExcluded: []})\n        } else {\n            // Select the group\n            this.setState({name: selected})\n            this.refresh(this.props.account.orgid, selected)\n        }\n    }\n\n    handleAddToGroup = (e) => {\n        e.preventDefault();\n        let deviceId = e.target.getAttribute('data-key')\n\n        api.groupsDeviceLink(this.props.account.orgid, this.state.name, deviceId).then(response => {\n            this.refresh(this.props.account.orgid, this.state.name)\n        }).catch(e => {\n            this.setState({message: formatError(e.response.data), devicesExcluded: []});\n        })\n    }\n\n    handleRemoveFromGroup = (e) => {\n        e.preventDefault();\n        let deviceId = e.target.getAttribute('data-key')\n\n        api.groupsDeviceUnlink(this.props.account.orgid, this.state.name, deviceId).then(response => {\n            this.refresh(this.props.account.orgid, this.state.name)\n        }).catch(e => {\n            this.setState({message: formatError(e.response.data), devicesExcluded: []});\n        })\n    }\n\n    renderRowsGroups(items) {\n        return items.map((l) => {\n          let selected = (l.name===this.state.name) ? 'p-button--brand' : 'p-button--neutral'\n          return (\n            <tr key={l.name}>\n                <td className=\"overflow\">\n                    <button className={selected} onClick={this.handleGroupClick} data-key={l.name}>{l.name}</button>\n                </td>\n            </tr>\n          );\n        });\n    }\n\n    renderRowsDevices(items, excluded) {\n        return items.map((l) => {\n            return (\n                <tr key={l.deviceId}>\n                    <td className=\"overflow\">\n                        {excluded ? <button onClick={this.handleAddToGroup} data-key={l.deviceId} className=\"p-button--neutral xsmall\"><i data-key={l.deviceId}  className=\"p-icon--plus\" /></button>\n                            : <button onClick={this.handleRemoveFromGroup} data-key={l.deviceId}  className=\"p-button--neutral xsmall\"><i data-key={l.deviceId}  className=\"p-icon--close\" /></button>}\n                            &nbsp;\n                        {l.brand} {l.model} {l.serial}\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    renderTableGroups(items) {\n        if (!items) {\n            return\n        }\n        if (items.length > 0) {\n            return (\n            <div className=\"col-4\">\n                <table>\n                <thead>\n                    <tr>\n                        <th>{T('groups')}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.renderRowsGroups(items)}\n                </tbody>\n                </table>\n            </div>\n            );\n        } else {\n            return (\n            <p>{T('no-groups')}</p>\n            );\n        }\n    }\n\n    renderTableDevices(items) {\n        if (!items) {\n            return\n        }\n        if (items.length > 0) {\n            return (\n                <div className=\"col-4\">\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>{T('devices')}</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.renderRowsDevices(items, false)}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"col-4\">\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>{T('devices')}</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr><td>{T('no-devices')}</td></tr>\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n    }\n\n    renderTableDevicesExcluded(items) {\n        if (!items) {\n            return\n        }\n        if (items.length > 0) {\n            return (\n                <div className=\"col-3\">\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>{T('devices-excluded')}</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.renderRowsDevices(items, true)}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"col-4\">\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>{T('devices-excluded')}</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr><td>{T('no-devices')}</td></tr>\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"row\">\n                <section className=\"row\">\n                    <h2>\n                        {T('groups')}\n                        {canUserAdministrate(this.props.token) ?\n                            <div className=\"u-float-right\">\n                                <a href=\"/groups/new\" className=\"p-button--brand\" title={T('new-group')}>\n                                    <i className=\"fa fa-plus\" aria-hidden=\"true\" />\n                                </a>\n                            </div>\n                            : ''\n                        }\n                    </h2>\n                    <div className=\"col-12\">\n                        <AlertBox message={this.props.message} />\n                    </div>\n                </section>\n\n                <section className=\"row spacer\">\n                    {this.renderTableGroups(this.props.groups)}\n                    {this.state.name ?\n                        this.renderTableDevices(this.state.devices) : ''\n                    }\n                    {this.state.name ?\n                        this.renderTableDevicesExcluded(this.state.devicesExcluded) : ''\n                    }\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default Groups\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nimport React, {Component} from 'react';\nimport AlertBox from './AlertBox';\nimport {T} from './Utils';\n\nclass Actions extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: null,\n            groups: [],\n            actions: [],\n        }\n    }\n\n    refresh(orgid, name) {\n    }\n\n    handleGroupClick = (e) => {\n        e.preventDefault();\n\n        let selected = e.target.getAttribute('data-key')\n        if (this.state.name === selected) {\n            // Deselect the group\n            this.setState({name: null, devices: [], devicesExcluded: []})\n        } else {\n            // Select the group\n            this.setState({name: selected})\n            this.refresh(this.props.account.orgid, selected)\n        }\n    }\n\n    renderRowsGroups(items) {\n        return items.map((l) => {\n            let selected = (l.name===this.state.name) ? 'p-button--brand' : 'p-button--neutral'\n            return (\n                <tr key={l.name}>\n                    <td className=\"overflow\">\n                        <button className={selected} onClick={this.handleGroupClick} data-key={l.name}>{l.name}</button>\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    renderTableGroups(items) {\n        if (!items) {\n            return\n        }\n        if (items.length > 0) {\n            return (\n                <div className=\"col-4\">\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>{T('groups')}</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.renderRowsGroups(items)}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        } else {\n            return (\n                <p>{T('no-groups')}</p>\n            );\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"row\">\n                <section className=\"row\">\n                    <h2>{T('groups')}</h2>\n                    <div className=\"col-12\">\n                        <AlertBox message={this.props.message} />\n                    </div>\n                </section>\n\n                <section className=\"row spacer\">\n                    {this.renderTableGroups(this.props.groups)}\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default Actions\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\nimport React, {Component} from 'react';\nimport api from '../models/api';\nimport AlertBox from './AlertBox';\nimport {T, formatError, isUserAdmin} from './Utils';\n\nclass GroupEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: null,\n            error: null,\n            hideForm: false,\n            nameTo: '',\n        };\n    }\n\n    componentDidMount() {\n\n        if (this.props.name) {\n            this.setTitle('edit-group');\n            this.getGroup(this.props.account.orgid, this.props.name);\n        } else {\n            this.setTitle('new-group');\n        }\n    }\n\n    getGroup(org_id, name) {\n        api.groupsGet(org_id, name).then(response => {\n            this.setState({group: response.data.group, nameTo: response.data.group.name});\n        })\n        .catch((e) => {\n            this.setState({error: formatError(e.response.data), hideForm: true});\n        })\n    }\n\n    setTitle(title) {\n        this.setState({title: T(title)});\n    }\n\n    handleChangeName = (e) => {\n        this.setState({nameTo: e.target.value});\n    }\n\n    handleSaveClick = (e) => {\n        e.preventDefault();\n\n        if (this.props.name) {\n            // Update the existing device\n            api.groupsUpdate(this.props.account.orgid, this.props.name, this.state.nameTo).then(response => {\n                window.location = '/groups';\n            })\n            .catch(e => {\n                this.setState({error: formatError(e.response.data), hideForm: false});\n            })\n        } else {\n            // Create a new device\n            api.groupsCreate(this.props.account.orgid, this.state.nameTo).then(response => {\n                window.location = '/groups';\n            })\n            .catch(e => {\n                this.setState({error: formatError(e.response.data), hideForm: false});\n            })\n        }\n    }\n\n    render () {\n        if (!isUserAdmin(this.props.token)) {\n            return (\n                <div className=\"row\">\n                    <AlertBox message={T('error-no-permissions')} />\n                </div>\n            )\n        }\n\n        if (this.state.hideForm) {\n            return (\n                <div className=\"row\">\n                    <AlertBox message={this.state.error} />\n                </div>\n            )\n        }\n\n        let disabled = this.state.status ? true : false;\n\n        return (\n            <div className=\"row\">\n                <section className=\"row\">\n                    <h2>{this.state.title}</h2>\n\n                    <AlertBox message={this.state.error} />\n\n                    <form>\n                        <fieldset>\n                            <label htmlFor=\"name\">{T('name')}:\n                                <input type=\"text\" id=\"name\" placeholder={T('group-desc')}\n                                       value={this.state.name} onChange={this.handleChangeName} disabled={disabled} />\n                            </label>\n                        </fieldset>\n                    </form>\n\n                    <div>\n                        <a href='/groups' className=\"p-button--neutral\">{T('cancel')}</a>\n                        &nbsp;\n                        <a href='/groups' onClick={this.handleSaveClick} className=\"p-button--brand\">{T('save')}</a>\n                    </div>\n                </section>\n                <br />\n            </div>\n        )\n\n    }\n\n}\n\nexport default GroupEdit;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nimport React, { Component } from 'react';\nimport {T, isLoggedIn} from './Utils'\nimport AlertBox from './AlertBox'\n\n\nclass Index extends Component {\n\n  constructor(props) {\n\n    super(props)\n    this.state = {\n      token: props.token || {},\n    }\n  }\n\n  handleLogin = (e) => {\n    window.location.pathname = '/login'\n  }\n\n  renderUser() {\n    if (isLoggedIn(this.props.token)) {\n      return <div />\n    } else {\n      return (\n        <div>\n          <button onClick={this.handleLogin} className=\"p-button--brand\">{T('login')}</button>\n        </div>\n      )\n    }\n  }\n\n  renderError() {\n    if (this.props.error) {\n      return (\n        <AlertBox message={T('user-not-found')} />\n      )\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"row\">\n\n          <section className=\"row\">\n            <h2>{T('title')}</h2>\n            <h3>{this.props.account.name}</h3>\n            {this.renderError()}\n            <div>\n              <div className=\"p-card\">\n                {T('site-description')}\n              </div>\n            </div>\n          </section>\n\n          <section className=\"row spacer\">\n            {this.renderUser()}\n          </section>\n        </div>\n    );\n  }\n}\n\nexport default Index;","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Navigation from './components/Navigation';\nimport AlertBox from './components/AlertBox';\nimport Accounts from './components/Accounts';\nimport AccountEdit from './components/AccountEdit';\nimport Users from './components/Users';\nimport UserEdit from './components/UserEdit';\nimport Device from './components/Device';\nimport Devices from './components/Devices';\nimport Register from './components/Register';\nimport RegisterEdit from './components/RegisterEdit';\nimport DeviceSnaps from './components/DeviceSnaps';\nimport Groups from './components/Groups';\nimport Actions from './components/Actions';\nimport GroupEdit from './components/GroupEdit';\nimport If from './components/If';\nimport Index from './components/Index';\nimport api from './models/api';\nimport {T, isLoggedIn, parseRoute, sectionNavLinks, getAccount, saveAccount, formatError} from './components/Utils'\nimport './sass/App.css'\n\nimport createHistory from 'history/createBrowserHistory'\nconst history = createHistory()\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      location: history.location,\n      token: props.token || {},\n      accounts: [],\n      selectedAccount: getAccount() || {},\n      reg_devices: [],\n      devices: [],\n      groups: [],\n      clients: [],\n      client: {},\n      clientObject: {},\n      snaps: [],\n      actions: [],\n    }\n\n    history.listen(this.handleNavigation.bind(this))\n    this.getAccounts()\n  }\n\n  handleNavigation(location) {\n    this.setState({ location: location })\n    window.scrollTo(0, 0)\n  }\n\n  getAccounts() {\n    if (isLoggedIn(this.props.token)) {\n        api.accountsList().then(response => {\n            var selectedAccount = this.state.selectedAccount;\n\n            if ((!getAccount().orgid) || (getAccount().orgid==='undefined')) {\n              // Set to the first in the account list\n              if (response.data.organizations.length > 0) {\n                selectedAccount = response.data.organizations[0]\n                saveAccount(selectedAccount)\n              }\n            }\n\n            this.setState({accounts: response.data.organizations, selectedAccount: selectedAccount})\n            this.updateDataForRoute(selectedAccount, false)\n        })\n    }\n  }\n\n  getRegisteredDevices(orgid) {\n    api.clientsList(orgid).then(response => {\n        this.setState({reg_devices: response.data.devices})\n    })\n  }\n\n  getDevices(orgid) {\n    api.devicesList(orgid).then(response => {\n        this.setState({devices: response.data.devices})\n    })\n  }\n\n  getClient (orgid, endpoint) {\n    api.devicesGet(orgid, endpoint).then(response => {\n        this.setState({client: response.data})\n    }).catch(e => {\n        this.setState({message: formatError(e.response.data), client: {}});\n    })\n  }\n\n  getGroups (orgid) {\n    api.groupsList(orgid).then(response => {\n        this.setState({groups: response.data.groups})\n    }).catch(e => {\n        this.setState({message: formatError(e.response.data), groups: []});\n    })\n  }\n\n  getSnaps(orgid, endpoint) {\n    api.snapsList(orgid, endpoint).then(response => {\n        this.setState({snaps: response.data.snaps})\n    })\n    .catch(e => {\n        this.setState({message: formatError(e.response), snaps: []});\n    })\n  }\n\n  getActions(orgid, endpoint) {\n      api.actionsList(orgid, endpoint).then(response => {\n          this.setState({actions: response.data.actions})\n      })\n      .catch(e => {\n          console.log('---',e)\n          this.setState({message: formatError(e.response), actions: []});\n      })\n  }\n\n  // Get the data that's conditional on the route\n  updateDataForRoute(selectedAccount, accountChanged) {\n      const r = parseRoute()\n\n      // Devices and registrations are unique for an account. So changing account may need to trigger a page change\n      if (accountChanged) {\n        // If we are on a clients subsection and the account is changed, navigated to the clients list\n        if ((r.section==='clients') && (r.sectionId)) {\n          window.location = '/clients'\n          return\n        }\n      }\n\n      if(r.section==='register') {this.getRegisteredDevices(selectedAccount.orgid)}\n      if(r.section==='devices') {this.getDevices(selectedAccount.orgid)}\n      if((r.section==='devices') && (r.sectionId)) {this.getClient(selectedAccount.orgid, r.sectionId)}\n      if((r.section==='devices') && (r.sectionId)) {this.getActions(selectedAccount.orgid, r.sectionId)}\n      if((r.section==='devices') && (r.sectionId) && (r.subsection==='snaps')) {this.getSnaps(selectedAccount.orgid, r.sectionId)}\n      if(r.section==='groups') {this.getGroups(selectedAccount.orgid)}\n      if(r.section==='actions') {this.getGroups(selectedAccount.orgid)}\n  }\n\n  handleAccountChange = (account) => {\n    saveAccount(account)\n    this.setState({selectedAccount: account})\n\n    this.updateDataForRoute(account, true)\n  }\n\n  handleLogin = (e) => {\n    window.location.pathname = '/login'\n  }\n\n  renderAccounts(sectionId, subsection) {\n    \n    if (!sectionId) {\n      return <Accounts token={this.props.token} accounts={this.state.accounts} />\n    }\n\n    switch(sectionId) {\n      case 'new':\n        return <AccountEdit token={this.props.token} />\n      default:\n        return <AccountEdit token={this.props.token} id={sectionId} />\n    }\n  }\n\n  renderUsers(sectionId, subsection) {\n\n    if (!sectionId) {\n      return <Users token={this.props.token} />\n    }\n\n    switch(sectionId) {\n      case 'new':\n        return <UserEdit token={this.props.token} />\n      default:\n        return <UserEdit token={this.props.token} username={sectionId} />\n    }\n  }\n\n  renderDevices(sectionId, subsection) {\n    if (!sectionId) {\n      return <Devices token={this.props.token} devices={this.state.devices} account={this.state.selectedAccount} />\n    }\n\n    switch(subsection) {\n      case 'snaps':\n        return <DeviceSnaps token={this.props.token} endpoint={sectionId} account={this.state.selectedAccount}\n                  device={this.state.client} snaps={this.state.snaps} />\n      default:\n        return <Device token={this.props.token} endpoint={sectionId} message={this.state.message}\n                       actions={this.state.actions}\n                       client={this.state.client} clientObject={this.state.clientObject} account={this.state.selectedAccount} />\n    }\n  }\n\n  renderRegister(sectionId, subsection) {\n    if (!sectionId) {\n        return <Register token={this.props.token} devices={this.state.reg_devices} account={this.state.selectedAccount} />\n    }\n\n    switch(sectionId) {\n      case 'new':\n        return <RegisterEdit token={this.props.token} account={this.state.selectedAccount} />\n      default:\n        return <RegisterEdit token={this.props.token} account={this.state.selectedAccount} id={sectionId} />\n    }\n  }\n\n  renderGroups(sectionId, subsection) {\n\n    if (!sectionId) {\n        return (<Groups token={this.props.token} groups={this.state.groups} account={this.state.selectedAccount} />)\n    }\n\n    switch(sectionId) {\n      case 'new':\n        return <GroupEdit token={this.props.token} account={this.state.selectedAccount} />\n      default:\n        return <GroupEdit token={this.props.token} account={this.state.selectedAccount} name={sectionId} />\n    }\n  }\n\n  renderActions(sectionId, subsection) {\n    if (!sectionId) {\n        return (<Actions token={this.props.token} groups={this.state.groups} account={this.state.selectedAccount} />)\n    }\n\n    // switch(sectionId) {\n    //     case 'new':\n    //         return <GroupEdit token={this.props.token} account={this.state.selectedAccount} />\n    //     default:\n    //         return <GroupEdit token={this.props.token} account={this.state.selectedAccount} name={sectionId} />\n    // }\n  }\n\n  renderSubnav(currentSection, sectionId, subsection) {\n    var l = sectionNavLinks(currentSection, sectionId);\n    if (l) {\n      return (\n        <div className=\"subnav\">\n          <nav className=\"p-navigation__nav p-navigation--light\" role=\"menubar\">\n            <Navigation links={l} section={currentSection} sectionId={sectionId} subsection={subsection} token={this.props.token} />\n          </nav>\n        </div>\n      );\n    } else {\n      return <span />\n    }\n  }\n\n  render() {\n\n    const r = parseRoute()\n    console.log(r)\n    console.log('---account', this.state.selectedAccount)\n\n    return (\n      <div className=\"App\">\n        <Header token={this.props.token} section={r.section}\n          accounts={this.state.accounts} selectedAccount={this.state.selectedAccount}\n          onAccountChange={this.handleAccountChange} />\n\n        <section className=\"p-strip--image is-shallow snapcraft-banner-background\">\n          <div className=\"row\">\n            \n          </div>\n        </section>\n\n        <If cond={isLoggedIn(this.props.token)}>\n          {this.renderSubnav(r.section, r.sectionId, r.subsection)}\n        </If>\n\n        <If cond={isLoggedIn(this.props.token)}>\n          <div className=\"page-content\">\n            {r.section===''? <Index token={this.props.token} account={this.state.selectedAccount} /> : ''}\n            {r.section==='notfound'? <Index token={this.props.token} error /> : ''}\n    \n            {r.section==='devices'? this.renderDevices(r.sectionId, r.subsection) : ''}\n            {r.section==='register'? this.renderRegister(r.sectionId, r.subsection) : ''}\n            {r.section==='groups'? this.renderGroups(r.sectionId, r.subsection) : ''}\n            {r.section==='accounts'? this.renderAccounts(r.sectionId, r.subsection) : ''}\n            {r.section==='users'? this.renderUsers(r.sectionId, r.subsection) : ''}\n            {r.section==='actions'? this.renderActions(r.sectionId, r.subsection) : ''}\n          </div>\n        </If>\n        \n        <If cond={!isLoggedIn(this.props.token)}>\n          <div className=\"page-content\">\n              <div className=\"row\">\n                <AlertBox message={T('error-no-auth')} />\n                <button onClick={this.handleLogin} className=\"p-button--brand col-1\">{T('login')}</button>\n              </div>\n          </div>\n        </If>\n\n        <Footer />\n\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","/*\n * This file is part of the IoT Management Service\n * Copyright 2019 Canonical Ltd.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License version 3, as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,\n * SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {getAuthToken}      from './components/Utils'\n\ngetAuthToken( (token) => {\n    ReactDOM.render(<App token={token} />, document.getElementById('root'));\n})\n//registerServiceWorker();\n"],"sourceRoot":""}